import logging
import subprocess
import time
import textwrap as tw

from telegram import Bot

import settings

logger = logging.getLogger(__name__)

bot = Bot(token=settings.TG_BOT_TOKEN)


def is_server_up(service_name):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —Å–µ—Ä–≤–∏—Å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "active".
    """
    process = subprocess.run(['systemctl', 'status', service_name],
                             stdout=subprocess.PIPE)
    output = process.stdout.decode('utf-8')
    return 'Active: active (running)' in output


def check_server():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –±–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Å–µ—Ä–≤–∏—Å–æ–≤ –∏–ª–∏
    –æ–± –æ—à–∏–±–∫–∞—Ö –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞
    """
    logging.basicConfig(
        format='%(asctime)s - %(name)s - %(levelname)s - %(funcName)s: %(message)s',
        level=logging.INFO
    )

    services = settings.SERVICES
    chat_id = settings.SUPPORT_CHAT_ID
    cloud = settings.CLOUD
    server = settings.SERVER_NAME

    try:
        for service_name in services:
            if not is_server_up(service_name):
                message = """\
                üîîüîîüîî
                Check server %s (%s): service %s is down üëé. 
                Please take action!
                """ % (server, cloud, services[service_name])
                bot.send_message(chat_id=chat_id, text=tw.dedent(message))
    except Exception as e:
        logger.exception(e)
        bot.send_message(chat_id=chat_id, text=str(e))


if __name__ == '__main__':
    while True:
        check_server()
        time.sleep(300)
